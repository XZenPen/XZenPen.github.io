<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Js中的正则</title>
    <url>/2021/04/17/jsp/</url>
    <content><![CDATA[<h1 id="正则表达式概述"><a href="#正则表达式概述" class="headerlink" title="正则表达式概述"></a>正则表达式概述</h1><h2 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h2><ul>
<li>正则表达式（ Regular Expression ）是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象。</li>
<li>正则表通常被用来检索、替换那些符合某个模式（规则）的文本，例如验证表单：用户名表单只能输入英文字母、数字或者下划线， 昵称输入框中可以输入中文(匹配)。此外，正则表达式还常用于过滤掉页面内容中的一些敏感词(替换)，或从字符串中获取我们想要的特定部分(提取)等 。<h2 id="正则表达式的特点"><a href="#正则表达式的特点" class="headerlink" title="正则表达式的特点"></a>正则表达式的特点</h2></li>
</ul>
<ol>
<li>灵活性、逻辑性和功能性非常的强。</li>
<li>可以迅速地用极简单的方式达到字符串的复杂控制。</li>
<li>实际开发,一般都是直接复制写好的正则表达式. 但是要求会使用正则表达式并且根据实际情况修改正则表达式.。<h1 id="正则表达式使用"><a href="#正则表达式使用" class="headerlink" title="正则表达式使用"></a>正则表达式使用</h1></li>
<li>通过调用 RegExp 对象的构造函数创建<code>var 变量名 = new RegExp(/表达式/)</code>;</li>
<li>通过字面量创建<code>var 变量名 = /表达式/;</code></li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正则表达式在js中的使用</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 利用 RegExp对象来创建 正则表达式</span></span><br><span class="line">        <span class="keyword">var</span> regexp = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/123/</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(regexp);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 利用字面量创建 正则表达式</span></span><br><span class="line">        <span class="keyword">var</span> rg = <span class="regexp">/123/</span>;</span><br><span class="line">        <span class="comment">// 3.test 方法用来检测字符串是否符合正则表达式要求的规范</span></span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="number">123</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;abc&#x27;</span>));</span><br></pre></td></tr></table></figure>
<h2 id="正则表达式中的特殊字符"><a href="#正则表达式中的特殊字符" class="headerlink" title="正则表达式中的特殊字符"></a>正则表达式中的特殊字符</h2><p>边界符:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 边界符 ^ $ </span></span><br><span class="line">        <span class="keyword">var</span> rg = <span class="regexp">/abc/</span>; <span class="comment">// 正则表达式里面不需要加引号 不管是数字型还是字符串型</span></span><br><span class="line">        <span class="comment">// /abc/ 只要包含有abc这个字符串返回的都是true</span></span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;abcd&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;aabcd&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;---------------------------&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^abc/</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abc&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abcd&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aabcd&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;---------------------------&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> reg1 = <span class="regexp">/^abc$/</span>; <span class="comment">// 精确匹配 要求必须是 abc字符串才符合规范</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;abc&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;abcd&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;aabcd&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;abcabc&#x27;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>字符类:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符类: [] 表示有一系列字符可供选择，只要匹配其中一个就可以了</span></span><br><span class="line">        <span class="keyword">var</span> rg = <span class="regexp">/[abc]/</span>; <span class="comment">// 只要包含有a 或者 包含有b 或者包含有c 都返回为true</span></span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;andy&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;baby&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;color&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg.test(<span class="string">&#x27;red&#x27;</span>));</span><br><span class="line">        <span class="keyword">var</span> rg1 = <span class="regexp">/^[abc]$/</span>; <span class="comment">// 三选一 只有是a 或者是 b  或者是c 这三个字母才返回 true</span></span><br><span class="line">        <span class="built_in">console</span>.log(rg1.test(<span class="string">&#x27;aa&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg1.test(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg1.test(<span class="string">&#x27;b&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg1.test(<span class="string">&#x27;c&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(rg1.test(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;------------------&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^[a-z]$/</span>; <span class="comment">// 26个英文字母任何一个字母返回 true  - 表示的是a 到z 的范围  </span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;z&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;A&#x27;</span>));</span><br><span class="line">        <span class="comment">// 字符组合</span></span><br><span class="line">        <span class="keyword">var</span> reg1 = <span class="regexp">/^[a-zA-Z0-9_-]$/</span>; <span class="comment">// 26个英文字母(大写和小写都可以)任何一个字母返回 true  </span></span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;B&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="number">8</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;-&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;_&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg1.test(<span class="string">&#x27;!&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;----------------&#x27;</span>);</span><br><span class="line">        <span class="comment">// 如果中括号里面有^ 表示取反的意思 千万和 我们边界符 ^ 别混淆</span></span><br><span class="line">        <span class="keyword">var</span> reg2 = <span class="regexp">/^[^a-zA-Z0-9_-]$/</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="string">&#x27;B&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="number">8</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="string">&#x27;-&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="string">&#x27;_&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg2.test(<span class="string">&#x27;!&#x27;</span>));</span><br></pre></td></tr></table></figure>
<p>量词:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 量词符: 用来设定某个模式出现的次数</span></span><br><span class="line">        <span class="comment">// 简单理解: 就是让下面的a这个字符重复多少次</span></span><br><span class="line">        <span class="comment">// var reg = /^a$/;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  * 相当于 &gt;= 0 可以出现0次或者很多次 </span></span><br><span class="line">        <span class="comment">// var reg = /^a*$/;</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;&#x27;));</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;a&#x27;));</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;aaaa&#x27;));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  + 相当于 &gt;= 1 可以出现1次或者很多次</span></span><br><span class="line">        <span class="comment">// var reg = /^a+$/;</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;&#x27;)); // false</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;a&#x27;)); // true</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;aaaa&#x27;)); // true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  ?  相当于 1 || 0</span></span><br><span class="line">        <span class="comment">// var reg = /^a?$/;</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;&#x27;)); // true</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;a&#x27;)); // true</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;aaaa&#x27;)); // false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  &#123;3 &#125; 就是重复3次</span></span><br><span class="line">        <span class="comment">// var reg = /^a&#123;3&#125;$/;</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;&#x27;)); // false</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;a&#x27;)); // false</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;aaaa&#x27;)); // false</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;aaa&#x27;)); // true</span></span><br><span class="line">        <span class="comment">//  &#123;3, &#125;  大于等于3</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^a&#123;3,&#125;$/</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aaaa&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aaa&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="comment">//  &#123;3,16&#125;  大于等于3 并且 小于等于16</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^a&#123;3,6&#125;$/</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aaaa&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aaa&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;aaaaaaa&#x27;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>括号总结：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 中括号 字符集合.匹配方括号中的任意字符. </span></span><br><span class="line">        <span class="comment">// var reg = /^[abc]$/;</span></span><br><span class="line">        <span class="comment">// a 也可以 b 也可以 c 可以  a ||b || c</span></span><br><span class="line">        <span class="comment">// 大括号  量词符. 里面表示重复次数</span></span><br><span class="line">        <span class="comment">// var reg = /^abc&#123;3&#125;$/; // 它只是让c重复三次   abccc</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;abc&#x27;));</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;abcabcabc&#x27;));</span></span><br><span class="line">        <span class="comment">// console.log(reg.test(&#x27;abccc&#x27;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 小括号 表示优先级</span></span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^(abc)&#123;3&#125;$/</span>; <span class="comment">// 它是让abcc重复三次</span></span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abcabcabc&#x27;</span>));</span><br><span class="line">        <span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abccc&#x27;</span>));</span><br></pre></td></tr></table></figure>
<h2 id="用户注册案例验证"><a href="#用户注册案例验证" class="headerlink" title="用户注册案例验证"></a>用户注册案例验证</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="regexp">/^1[3|4|5|7|8]\d&#123;9&#125;$/</span>; <span class="comment">// 手机号码的正则表达式</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="regexp">/^[1-9]\d&#123;4,&#125;$/</span>; <span class="comment">// qq验证</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="regexp">/^[\u4e00-\u9fa5]&#123;2,8&#125;$/</span>;<span class="comment">// 昵称</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="regexp">/^\d&#123;6&#125;$/</span>;      <span class="comment">//验证码</span></span><br><span class="line"><span class="keyword">var</span> e = <span class="regexp">/^[a-zA-Z0-9_-]&#123;6,16&#125;$/</span>;  <span class="comment">//密码</span></span><br></pre></td></tr></table></figure>
<p>预定义类：<br><img src="https://img-blog.csdnimg.cn/20210410102652219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NydExpZmU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p><code>[\u4e00-\u9fa5]</code>表示是否是中文</p>
</blockquote>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>特殊字符非常多，可以参考：<br> <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">MDN</a>.<br><a href="http://tool.oschina.net/regex">正则测试工具</a>.</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
